name: Build Android APK

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

permissions:
  contents: write
  issues: read
  pull-requests: read

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '21'
        
    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
      
    - name: Accept Android SDK licenses
      run: yes | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --licenses || true
      
    - name: Install dependencies
      run: npm ci
      
    - name: Build React app
      run: |
        export GENERATE_SOURCEMAP=false
        npm run build
        
    - name: Copy to Capacitor
      run: npx cap copy android
      
    - name: Sync Capacitor
      run: npx cap sync android
      
    - name: Build APK
      run: |
        cd android
        chmod +x gradlew
        ./gradlew assembleDebug --no-daemon --stacktrace
        
    - name: Rename APK with run number
      run: |
        cd android/app/build/outputs/apk/debug/
        mv app-debug.apk "shadow-accord-v${{ github.run_number }}.apk"
        echo "APK_NAME=shadow-accord-v${{ github.run_number }}.apk" >> $GITHUB_ENV
        echo "APK_PATH=android/app/build/outputs/apk/debug/shadow-accord-v${{ github.run_number }}.apk" >> $GITHUB_ENV
        
    - name: Upload APK
      uses: actions/upload-artifact@v4
      with:
        name: ${{ env.APK_NAME }}
        path: ${{ env.APK_PATH }}
        retention-days: 30
        compression-level: 0  # No compression for APK files

    - name: Create Release
      if: github.ref == 'refs/heads/main' && success()
      uses: softprops/action-gh-release@v2
      with:
        tag_name: "build-${{ github.run_number }}"
        name: "Shadow Accord Build ${{ github.run_number }}"
        body: |
          🚀 **Automated APK Build**
          
          **Build Number:** ${{ github.run_number }}
          **Commit:** ${{ github.sha }}
          **Built:** ${{ github.event.head_commit.timestamp }}
          
          📱 Download the APK directly from the assets below - no unzipping needed!
        files: ${{ env.APK_PATH }}
        draft: false
        prerelease: true
        fail_on_unmatched_files: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Get APK info
      run: |
        if [ -f "${{ env.APK_PATH }}" ]; then
          APK_SIZE=$(du -h "${{ env.APK_PATH }}" | cut -f1)
          echo "✅ APK built successfully!"
          echo "📱 APK name: ${{ env.APK_NAME }}"
          echo "📱 APK size: $APK_SIZE"
          echo "📁 APK path: ${{ env.APK_PATH }}"
          echo "🔢 Build number: ${{ github.run_number }}"
          echo "🔗 Download from the Actions artifacts above"
        else
          echo "❌ APK build failed!"
          exit 1
        fi

    - name: Create build summary
      run: |
        echo "# 📱 Android APK Build Summary" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**Build:** \`${{ env.APK_NAME }}\`" >> $GITHUB_STEP_SUMMARY
        echo "**Size:** $(du -h "${{ env.APK_PATH }}" | cut -f1)" >> $GITHUB_STEP_SUMMARY
        echo "**Run Number:** ${{ github.run_number }}" >> $GITHUB_STEP_SUMMARY
        echo "**Commit:** \`${{ github.sha }}\`" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "## 📥 Download Options:" >> $GITHUB_STEP_SUMMARY
        echo "1. **Direct APK** (recommended): Download from [Releases](https://github.com/${{ github.repository }}/releases) - no unzipping needed!" >> $GITHUB_STEP_SUMMARY
        echo "2. **Artifact**: Download from artifacts section above (will be in a zip file)" >> $GITHUB_STEP_SUMMARY
